<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>最佳实践 on liming.pub</title>
    <link>https://liming.pub/categories/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
    <description>Recent content in 最佳实践 on liming.pub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 02 Jun 2019 11:35:02 +0800</lastBuildDate>
    
	<atom:link href="https://liming.pub/categories/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git分支策略及开发流程规范</title>
      <link>https://liming.pub/post/git-branch-develop-specification/</link>
      <pubDate>Sun, 02 Jun 2019 11:35:02 +0800</pubDate>
      
      <guid>https://liming.pub/post/git-branch-develop-specification/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git常见的三种协作开发模式：Git Flow &amp;amp; GitHub Flow &amp;amp; Gitlab Flow，本文只是对上述几种模式进行吸收融合，结合项目实战总结出的比较实用的分支写作规范。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>从java语言到Go语言</title>
      <link>https://liming.pub/post/from-java-to-golang/</link>
      <pubDate>Sat, 27 Apr 2019 10:03:40 +0800</pubDate>
      
      <guid>https://liming.pub/post/from-java-to-golang/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;java做为大型企业应用的主力开发语言，一直有着任何语言都无法匹敌的优势。但是java虽好，就是太重了，不适合小规模、小场景、小工具的开发，一直架构、开发、运维、运营一线全栈发展的，必须要有一个更加趁手的、轻量小巧、快速高效的开发语言，先后用shell、python等脚本语言写了各种小工具，总感觉气味不对。于是最近抽时间接触了下号称是21世纪编程语言的golang，感觉非常妙，golang的设计目标和思路均是我目前为止最满意的，入坑不会后悔。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>用Asciidoc来写作</title>
      <link>https://liming.pub/post/hugo-with-asciidoc/</link>
      <pubDate>Sun, 21 Apr 2019 21:11:07 +0800</pubDate>
      
      <guid>https://liming.pub/post/hugo-with-asciidoc/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Markdown语法过于简单，规范不够标准，经常要花很多时间去适配不同工具，别的语言是熟能生巧，这个语言是越用越怀疑，这对于事事都想精细化控制的我来说是不可接受的。最近通过各种对比和实践，尝试了Asciidoc后，就彻底迷上了，现在日常文档已经基本切换到Asciidoc了，本文则是第一篇Asciidoc格式的文章，自然是贡献给Asciidoc这个主题了。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>前端框架选型</title>
      <link>https://liming.pub/post/front-end-framework/</link>
      <pubDate>Sun, 24 Mar 2019 21:19:38 +0800</pubDate>
      
      <guid>https://liming.pub/post/front-end-framework/</guid>
      <description>&lt;p&gt;前端技术经过近几年快速发展，语言标准、技术框架已经趋于成熟稳定，目前主流的开发框架为：React， Angular ，Vue。相对于后端Spring一统天下，前端三框架并驾齐驱的现状则让前端选择综合征者头痛不已。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>