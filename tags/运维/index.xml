<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on liming.pub</title>
    <link>https://liming.pub/tags/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on liming.pub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 30 Jun 2019 11:45:39 +0800</lastBuildDate>
    
	<atom:link href="https://liming.pub/tags/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux发送邮件</title>
      <link>https://liming.pub/post/linux-email-service/</link>
      <pubDate>Sun, 30 Jun 2019 11:45:39 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-email-service/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;说起发送邮件，我们第一反应就是写代码实现一个，其实在linux里面，无需借助java、c等重型编程语言就能轻松实现发送邮件的需求，下面介绍两种发邮件方法：&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rsync实践</title>
      <link>https://liming.pub/post/rsync/</link>
      <pubDate>Sun, 23 Jun 2019 14:48:56 +0800</pubDate>
      
      <guid>https://liming.pub/post/rsync/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;rsync（remote synchronize）是一个开源的跨操作系统的数据同步工具，可应用于 LAN/WAN/本地 等各种场景下的快速同步文件。rsync有三种工作模式：本地模式、通道模式、服务模式。本文只是通道模式下结合异机之间的同步备份的场景进行简单实践。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Samba实践</title>
      <link>https://liming.pub/post/samba/</link>
      <pubDate>Sat, 22 Jun 2019 09:42:35 +0800</pubDate>
      
      <guid>https://liming.pub/post/samba/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Samba是SMB/CIFS网络协议的重新实现, 可以在跨平台系统间进行文件共享，适用于局域网内数据共享、以及分布式文件系统中的数据一致，Samba的搭建和维护是运维人员的必备技能。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Docker私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-docker-permission/</link>
      <pubDate>Sat, 15 Jun 2019 10:01:11 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-docker-permission/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;基于nexus，可以做到docker的仓库隔离和权限控制，本文假设有两类仓库需求：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;合作伙伴共享仓库（权限：半公开）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公司自有仓库（权限：私有）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Nexus安装和配置</title>
      <link>https://liming.pub/post/nexus-settings/</link>
      <pubDate>Sun, 09 Jun 2019 22:22:50 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-settings/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nexus在手，私有仓库全都有，目前行业里常用的仓库neuxs3基本都已支持，可以说只需要搭建一个nexus，就能解决了开发过程中涉及到的所有私有仓库或镜像需求。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>SSH实用技巧</title>
      <link>https://liming.pub/post/ssh-practical-skills/</link>
      <pubDate>Sun, 09 Jun 2019 08:29:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/ssh-practical-skills/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ssh和基于ssh的命令（如scp）等是运维人员和服务器打交道的通道，当服务器数量较多，要记住那么多的服务器ip和密码也是非常困难的事情。其实有很多技巧和配置可以让ssh跟ls一样简单。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Docker介绍</title>
      <link>https://liming.pub/post/docker-introduction/</link>
      <pubDate>Sun, 14 Apr 2019 18:56:40 +0800</pubDate>
      
      <guid>https://liming.pub/post/docker-introduction/</guid>
      <description>&lt;p&gt;现如今，Docker已经是开发和运维的必备神器，本文以开发者视角简单介绍一下Docker的基本概念。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx使用经验及常用配置</title>
      <link>https://liming.pub/post/nginx-experience-and-configuration/</link>
      <pubDate>Sat, 09 Mar 2019 21:59:50 +0800</pubDate>
      
      <guid>https://liming.pub/post/nginx-experience-and-configuration/</guid>
      <description>&lt;p&gt;自从10年前接触nginx后，就对它爱不释手，最近两年运维实战也是大量使用，下面就nginx的一些使用经验和常用配置进行一下总结：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Certbot-Auto生成免费的通配符SSl证书</title>
      <link>https://liming.pub/post/certbot-auto-ssl-certificate/</link>
      <pubDate>Sun, 24 Feb 2019 10:12:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/certbot-auto-ssl-certificate/</guid>
      <description>&lt;p&gt;随着谷歌浏览器对非https网站醒目警示不安全后，https就成为网站的一个标配，但是现在一个ssl证书动辄几千元一年，对于创业公司也是一笔不小的费用。如果你喜欢自己动手，那么可以了解一下Let&amp;rsquo;s Encrypt项目，定期自己生成免费的SSL证书。
因为Let&amp;rsquo;s Encrypt证书有效期只有3个月，所以建议自动化，比如本文使用certbot-auto脚本。&lt;br /&gt;
证书分两种：一种是单域名证书，一种是通配符证书，其中单域名证书比较简单，也能自动化续期，本文主要针对通配符证书的生成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maven私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-maven-permission/</link>
      <pubDate>Sat, 23 Feb 2019 11:47:45 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-maven-permission/</guid>
      <description>&lt;p&gt;基于nexus3，可以做到maven仓库隔离和权限控制，配合maven工程脚手架可以实现仓库的灵活控制，本文假设maven仓库有如下需求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;同步中央仓库（权限：公开）&lt;/li&gt;
&lt;li&gt;合作伙伴共享仓库（权限：半公开）&lt;/li&gt;
&lt;li&gt;公司自有仓库（权限：私有）&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>shell中用$表达式截取和替换字符串</title>
      <link>https://liming.pub/post/shell-substring-removal/</link>
      <pubDate>Sun, 17 Feb 2019 10:54:58 +0800</pubDate>
      
      <guid>https://liming.pub/post/shell-substring-removal/</guid>
      <description>&lt;p&gt;说道截取字符串，我们常常会想到cut\awk等工具，其实shell自身截取字符串命令也很强大，下面以变量字符串&lt;code&gt;url=https://liming.pub/post/shell-substring-removal/index.html&lt;/code&gt;为例介绍几种字符串截取和替换方法：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux文件时间</title>
      <link>https://liming.pub/post/linux-file-time/</link>
      <pubDate>Sun, 06 Jan 2019 22:14:22 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-file-time/</guid>
      <description>&lt;p&gt;写了个脚本把之前三年的晨间日记转为hugo格式，其中最核心的处理就是生成日记时间，由于linux下没有创建时间，只有最后修改时间，为了把日记所属日期准确找出来，认真研究了下linux里的三个时间。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>