<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on liming.pub</title>
    <link>https://liming.pub/draft/</link>
    <description>Recent content in Drafts on liming.pub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="https://liming.pub/draft/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://liming.pub/draft/gitlab-ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liming.pub/draft/gitlab-ci/</guid>
      <description>= Gitlab-CI配置
== 服务端 === 开启CI === 配置CI == 客户端 === 安装gitlab-runner
[source,bash] curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash
yum install gitlab-ci-multi-runner === 配置gitlab-runner
vi /etc/gitlab-runner/config.toml
[source] concurrent = 10 check_interval = 0
[[runners]] name = &amp;ldquo;name&amp;rdquo; url = &amp;ldquo;http://192.168.1.1/ci&amp;quot; token = &amp;ldquo;&amp;rdquo; executor = &amp;ldquo;shell&amp;rdquo;
[runners.cache] === 常见问题： . 访问偶尔出现Forbidden 原因：Gitlab使用rack_attack做了并发访问的限制。 解决方案：将Gitlab的IP设置为白名单即可。编辑配置文件：
vi /etc/gitlab/gitlab.rb 输入“/”,查找gitlab_rails[&amp;lsquo;rack_attack_git_basic_auth&amp;rsquo;]关键词，取消注释。 修改ip_whitelist白名单属性，加入Gitlab部署的IP地址。如下所示：
1 2 3 4 5 6 7  gitlab_rails[&amp;#39;rack_attack_git_basic_auth&amp;#39;] = { &amp;#39;enabled&amp;#39; =&amp;gt; true, &amp;#39;ip_whitelist&amp;#39; =&amp;gt; [&amp;#34;127.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://liming.pub/draft/rync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liming.pub/draft/rync/</guid>
      <description>rsync（remote synchronize）是一个开源数据同步工具，可通过 LAN/WAN/本地 快速同步文件。 NOTE: 官网介绍：https://download.samba.org/pub/rsync/rsync.html
== 安装 一般只需要在目标主机安装rsync程序：
.CentOS
[source,shell] yum install -y rsync .MacOS
[source,shell] brew install -y rsync == 断点续传
[source,shell] rsync -P -e ssh SRC_FILE DEST_FILE 关键参数说明 -P 断点续传，显示进度
-e 替代rsh的shell程序 == 目录同步
[source,shell] rsync -avz &amp;ndash;delete -e ssh 1.xxx:/var/opt/backups /var/opt/backups 关键参数说明 -a &amp;ndash;archive 归档模式 -v &amp;ndash;verbose 详细输出模式 -z &amp;ndash;compose 传输过程中压缩处理 &amp;ndash;delete 源目录不存在而目标目录存在的文件将被删除
1.xxx ssh服务器别名 NOTE: 文件名后面是否带 /，含义不同，带 / 是将目录下的文件同步到目标文件夹下，不带 / 是将该目录同步到目标文件夹下。</description>
    </item>
    
  </channel>
</rss>