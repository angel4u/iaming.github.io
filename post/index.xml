<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on liming.pub</title>
    <link>https://liming.pub/post/</link>
    <description>Recent content in Posts on liming.pub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 24 Mar 2019 21:19:38 +0800</lastBuildDate>
    
	<atom:link href="https://liming.pub/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>前端框架选型</title>
      <link>https://liming.pub/post/front-end-framework/</link>
      <pubDate>Sun, 24 Mar 2019 21:19:38 +0800</pubDate>
      
      <guid>https://liming.pub/post/front-end-framework/</guid>
      <description>&lt;p&gt;前端技术经过近几年快速发展，语言标准、技术框架已经趋于成熟稳定，目前主流的开发框架为：React， Angular ，Vue。相对于后端Spring一统天下，前端三框架并驾齐驱的现状则让前端选择综合征者头痛不已。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx使用经验及常用配置</title>
      <link>https://liming.pub/post/nginx-experience-and-configuration/</link>
      <pubDate>Sat, 09 Mar 2019 21:59:50 +0800</pubDate>
      
      <guid>https://liming.pub/post/nginx-experience-and-configuration/</guid>
      <description>&lt;p&gt;自从10年前接触nginx后，就对它爱不释手，最近两年运维实战也是大量使用，下面就nginx的一些使用经验和常用配置进行一下总结：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Certbot-Auto生成免费的通配符SSl证书</title>
      <link>https://liming.pub/post/certbot-auto-ssl-certificate/</link>
      <pubDate>Sun, 24 Feb 2019 10:12:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/certbot-auto-ssl-certificate/</guid>
      <description>&lt;p&gt;随着谷歌浏览器对非https网站醒目警示不安全后，https就成为网站的一个标配，但是现在一个ssl证书动辄几千元一年，对于创业公司也是一笔不小的费用。如果你喜欢自己动手，那么可以了解一下Let&amp;rsquo;s Encrypt项目，定期自己生成免费的SSL证书。
因为Let&amp;rsquo;s Encrypt证书有效期只有3个月，所以建议自动化，比如本文使用certbot-auto脚本。&lt;br /&gt;
证书分两种：一种是单域名证书，一种是通配符证书，其中单域名证书比较简单，也能自动化续期，本文主要针对通配符证书的生成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maven私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-maven-permission/</link>
      <pubDate>Sat, 23 Feb 2019 11:47:45 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-maven-permission/</guid>
      <description>&lt;p&gt;基于nexus3，可以做到maven仓库隔离和权限控制，配置maven工程脚手架可以实现仓库的灵活控制，本文假设maven仓库有如下需求：&lt;br /&gt;
1. 同步中央仓库（权限：公开）
2. 合作伙伴共享仓库（权限：半公开）
3. 公司自有仓库（权限：私有）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac使用技巧及常用设置</title>
      <link>https://liming.pub/post/mac-practical-settings/</link>
      <pubDate>Sun, 17 Feb 2019 18:17:15 +0800</pubDate>
      
      <guid>https://liming.pub/post/mac-practical-settings/</guid>
      <description>&lt;p&gt;做为mac深度用户，越来越享受在Mac下高效工作，这里整理了一些我在日常中使用的设置和技巧，即作为备忘，也做为分享。当然，效率的提升没有终点，本文会持续更新：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shell中用$表达式截取和替换字符串</title>
      <link>https://liming.pub/post/shell-substring-removal/</link>
      <pubDate>Sun, 17 Feb 2019 10:54:58 +0800</pubDate>
      
      <guid>https://liming.pub/post/shell-substring-removal/</guid>
      <description>&lt;p&gt;说道截取字符串，我们常常会想到cut\awk等工具，其实shell自身截取字符串命令也很强大，下面以变量字符串&lt;code&gt;url=https://liming.pub/post/shell-substring-removal/index.html&lt;/code&gt;为例介绍几种字符串截取和替换方法：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微服务架构实践</title>
      <link>https://liming.pub/post/micro-service/</link>
      <pubDate>Sat, 09 Feb 2019 15:42:15 +0800</pubDate>
      
      <guid>https://liming.pub/post/micro-service/</guid>
      <description>&lt;p&gt;微服务架构就是把大的复杂系统拆分为若干个小的独立的服务， 每个服务运行在自己的进程中，并采用轻量级的机制进行通信（一般是 HTTP 资源 API），通过全自动部署工具来实现独立部署。这些服务都是围绕业务能力来构建，可以使用不同的编程语言和不同的数据存储技术，并保持最小化集中管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JAMStack</title>
      <link>https://liming.pub/post/jamstack/</link>
      <pubDate>Sun, 27 Jan 2019 19:53:39 +0800</pubDate>
      
      <guid>https://liming.pub/post/jamstack/</guid>
      <description>&lt;p&gt;随着我们的架构越来越复杂，技术越来越牛掰，效果越来越酷炫，我们每个人都在不停的学习，以至于我们都忘了技术存在的意义。蓦然回首，其实我们的需求真的很简单，简单到我们完全可以无视市面上大部分技术，解放程序员，让我们一起JAMStack吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git实用配置和技巧</title>
      <link>https://liming.pub/post/git-practical-skills/</link>
      <pubDate>Sat, 26 Jan 2019 10:10:46 +0800</pubDate>
      
      <guid>https://liming.pub/post/git-practical-skills/</guid>
      <description>&lt;p&gt;git命令博大精深，做为git深度用户，这里介绍几个自己一直在用的自认为很实用的git的配置和技巧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Restful缓存实践</title>
      <link>https://liming.pub/post/restful-cache/</link>
      <pubDate>Sun, 20 Jan 2019 21:30:43 +0800</pubDate>
      
      <guid>https://liming.pub/post/restful-cache/</guid>
      <description>&lt;p&gt;应用可以通过分布式集群等方式动态扩容，但数据库不行，一个系统的吞吐量最终取决于数据库，而缓存可以在应用和数据库之间起到一层保护，为了竟可能多的提高缓存命中率，降低数据库压力，做到及时性和性能的平衡，根据不同缓存特点和应用场景采用多级缓存，具体如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT最佳实践</title>
      <link>https://liming.pub/post/jwt/</link>
      <pubDate>Sat, 19 Jan 2019 22:33:53 +0800</pubDate>
      
      <guid>https://liming.pub/post/jwt/</guid>
      <description>&lt;p&gt;在单服务型应用时代，扩容时必须配备F5这样的硬件设备来解决session会话保持的问题；在微服务开始流行时，spring也给出了Spring Session这样的分布式共享会话方案；在Restful和前后端分离架构下，JWT才是正道。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux文件时间</title>
      <link>https://liming.pub/post/linux-file-time/</link>
      <pubDate>Sun, 06 Jan 2019 22:14:22 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-file-time/</guid>
      <description>&lt;p&gt;写了个脚本把之前三年的晨间日记转为hugo格式，其中最核心的处理就是生成日记时间，由于linux下没有创建时间，只有最后修改时间，为了把日记所属日期准确找出来，认真研究了下linux里的三个时间。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自我管理实践：晨间日记&#43;生理周期&#43;天气预报&#43;坚持打卡&#43;倒数提醒</title>
      <link>https://liming.pub/post/morning-diary-with-hugo/</link>
      <pubDate>Tue, 01 Jan 2019 19:33:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/morning-diary-with-hugo/</guid>
      <description>&lt;p&gt;趁着这个元旦假期在家“陪”爸妈和娃（其实是爸妈在看电视，娃在玩积木，我在敲代码），用python和shell升级了晨间日记的新写法：
&amp;gt;&amp;gt;每天早上起床后打开电脑，在命令行里敲下&lt;code&gt;md&lt;/code&gt;，程序自动从网上抓取近十天的天气预报，自动计算近十天的生理周期指数（身体、智力、情绪、直觉）显示在命令行里，大眼一扫后按回车键，程序自动按照晨间日记的模板（模板包含当天天气，当天生理指数信息，重要日期倒数日，坚持项目坚持天数，以及距出生共过了多少天等等）生成按yyyy/mm/dd-title.md的文件并以&lt;code&gt;vim&lt;/code&gt;方式打开进行编辑，完成后直接使用hugo本地打开进行预览，还可以点击日期tag或者星期tag查看上月今日、去年今年以及上周今日等的日记进行回顾。&lt;/p&gt;

&lt;p&gt;下面我简单罗列一下实现思路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>API错误码规范</title>
      <link>https://liming.pub/post/api-problem-json/</link>
      <pubDate>Mon, 31 Dec 2018 11:05:49 +0800</pubDate>
      
      <guid>https://liming.pub/post/api-problem-json/</guid>
      <description>&lt;p&gt;做了这么多年项目，倾听了太多开发人员对API接口返回错误码的吐槽，收到了太多用户对系统中云里雾里错误信息的埋怨。我在这几年实践中尝试过一些的解决方案，今天就做一下总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重拾码字的快乐</title>
      <link>https://liming.pub/post/start-writing-again/</link>
      <pubDate>Sun, 30 Dec 2018 18:31:13 +0800</pubDate>
      
      <guid>https://liming.pub/post/start-writing-again/</guid>
      <description>&lt;p&gt;前几天，一个同事问我要博客地址，不经意间一问，却深深的触动了我。&lt;/p&gt;

&lt;p&gt;博客我曾经有过，而且还不少，但真正投入大量精力的有两个，一个是05年开的好网博客，另一个是08年自己改程序购买主机搭建的阿明在线独立博客，大概是12年左右吧，两个博客先后都关闭了。现在唯一还在坚持的就只有QQ空间，虽然写的越来越少，至少每年元旦都会有做一下年终总结，并立一下当年flag，但这个唯一的QQ空间现在也已经设置为只有自己可见。&lt;/p&gt;

&lt;p&gt;所以现在自己还真的没有博客！而且这么多年都没有码字，表达能力已经严重退化，满脑子想说的感慨，却半天蹦不出一个词儿。&lt;/p&gt;

&lt;p&gt;于是趁着元旦放假，酝酿着重拾博客，经过调研，最终按如下方案开始了我的开篇博客：&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>